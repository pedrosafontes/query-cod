openapi: 3.0.3
info:
  title: Vinta Boilerplate API
  version: 0.1.0
  description: A Django project boilerplate with Vinta's best practices
paths:
  /api/attempts/{id}/:
    put:
      operationId: attempts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      tags:
      - attempts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attempt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attempt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attempt'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attempt'
          description: ''
    patch:
      operationId: attempts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      tags:
      - attempts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttempt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttempt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttempt'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attempt'
          description: ''
  /api/attempts/{id}/messages/:
    post:
      operationId: attempts_messages_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      tags:
      - attempts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/attempts/{id}/submit/:
    post:
      operationId: attempts_submit_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      tags:
      - attempts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
  /api/attempts/{id}/subqueries/{subquery_id}/executions/:
    post:
      operationId: attempts_subqueries_executions_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      - in: path
        name: subquery_id
        schema:
          type: integer
        required: true
      tags:
      - attempts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExecution'
          description: ''
  /api/attempts/{id}/tree/:
    get:
      operationId: attempts_tree_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attempt.
        required: true
      tags:
      - attempts
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTree'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/users/:
    get:
      operationId: auth_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/databases/:
    get:
      operationId: databases_list
      tags:
      - databases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatabaseSummary'
          description: ''
  /api/databases/{id}/:
    get:
      operationId: databases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this database.
        required: true
      tags:
      - databases
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
          description: ''
  /api/exercises/:
    get:
      operationId: exercises_list
      tags:
      - exercises
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExerciseSummary'
          description: ''
  /api/exercises/{id}/:
    get:
      operationId: exercises_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this exercise.
        required: true
      tags:
      - exercises
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /api/projects/:
    get:
      operationId: projects_list
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project_pk}/queries/:
    post:
      operationId: projects_queries_create
      parameters:
      - in: path
        name: project_pk
        schema:
          type: integer
        description: ID of the parent project
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Query'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
  /api/queries/{id}/:
    get:
      operationId: queries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    put:
      operationId: queries_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Query'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    patch:
      operationId: queries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuery'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
    delete:
      operationId: queries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/queries/{id}/executions/:
    post:
      operationId: queries_executions_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExecution'
          description: ''
  /api/queries/{id}/messages/:
    post:
      operationId: queries_messages_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/queries/{id}/subqueries/{subquery_id}/executions/:
    post:
      operationId: queries_subqueries_executions_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      - in: path
        name: subquery_id
        schema:
          type: integer
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryExecution'
          description: ''
  /api/queries/{id}/transpile/:
    post:
      operationId: queries_transpile_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
  /api/queries/{id}/tree/:
    get:
      operationId: queries_tree_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this query.
        required: true
      tags:
      - queries
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTree'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    AliasNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        alias:
          type: string
      required:
      - alias
      - children
      - id
      - sql_node_type
      - validation_errors
    Attempt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
          readOnly: true
        completed:
          type: boolean
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          readOnly: true
        assistant_messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
      required:
      - assistant_messages
      - id
      - language
      - validation_errors
    AuthorEnum:
      enum:
      - user
      - assistant
      type: string
      description: |-
        * `user` - User
        * `assistant` - Assistant
    Database:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        schema:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
              properties:
                type:
                  enum:
                  - smallint
                  - integer
                  - decimal
                  - numeric
                  - real
                  - float
                  - double-precision
                  - char
                  - varchar
                  - bit
                  - bit-varying
                  - date
                  - time
                  - timestamp
                  - 'null'
                  - boolean
                  type: string
                nullable:
                  type: boolean
                primary_key:
                  type: boolean
                references:
                  type: object
                  properties:
                    table:
                      type: string
                    column:
                      type: string
                  required:
                  - column
                  - table
                  nullable: true
              required:
              - nullable
              - primary_key
              - references
              - type
          readOnly: true
      required:
      - description
      - id
      - name
      - schema
    DatabaseSummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - id
      - name
    DifficultyEnum:
      enum:
      - easy
      - medium
      - hard
      type: string
      description: |-
        * `easy` - Easy
        * `medium` - Medium
        * `hard` - Hard
    DivisionNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
      required:
      - children
      - id
      - ra_node_type
      - validation_errors
    ErrorPosition:
      type: object
      properties:
        line:
          type: integer
        start_col:
          type: integer
        end_col:
          type: integer
      required:
      - end_col
      - line
      - start_col
    Exercise:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          $ref: '#/components/schemas/LanguageEnum'
        title:
          type: string
          maxLength: 255
        difficulty:
          $ref: '#/components/schemas/DifficultyEnum'
        description:
          type: string
        solution:
          type: string
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummary'
          readOnly: true
        completed:
          type: boolean
          readOnly: true
        attempt:
          allOf:
          - $ref: '#/components/schemas/Attempt'
          readOnly: true
        solution_data:
          allOf:
          - $ref: '#/components/schemas/QueryResultData'
          readOnly: true
      required:
      - attempt
      - completed
      - database
      - description
      - difficulty
      - id
      - language
      - solution
      - solution_data
      - title
    ExerciseSummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        difficulty:
          $ref: '#/components/schemas/DifficultyEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummary'
          readOnly: true
        completed:
          type: boolean
          readOnly: true
      required:
      - completed
      - database
      - difficulty
      - id
      - language
      - title
    Feedback:
      type: object
      properties:
        correct:
          type: boolean
        results:
          $ref: '#/components/schemas/QueryResultData'
      required:
      - correct
    GroupByNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        keys:
          type: array
          items:
            type: string
      required:
      - children
      - id
      - keys
      - sql_node_type
      - validation_errors
    GroupedAggregationNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        group_by:
          type: array
          items:
            type: string
        aggregations:
          type: array
          items:
            type: array
            items:
              type: string
      required:
      - aggregations
      - children
      - group_by
      - id
      - ra_node_type
      - validation_errors
    HavingNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        condition:
          type: string
      required:
      - children
      - condition
      - id
      - sql_node_type
      - validation_errors
    LanguageEnum:
      enum:
      - sql
      - ra
      type: string
      description: |-
        * `sql` - SQL
        * `ra` - Relational Algebra
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/AuthorEnum'
          readOnly: true
        content:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - content
      - created
      - id
    OrderByNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        keys:
          type: array
          items:
            type: string
      required:
      - children
      - id
      - keys
      - sql_node_type
      - validation_errors
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedAttempt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
          readOnly: true
        completed:
          type: boolean
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          readOnly: true
        assistant_messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          writeOnly: true
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummary'
          readOnly: true
        queries:
          type: array
          items:
            $ref: '#/components/schemas/QuerySummary'
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedQuery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        text:
          type: string
        language:
          $ref: '#/components/schemas/LanguageEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
          readOnly: true
        assistant_messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          writeOnly: true
        database:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummary'
          readOnly: true
        queries:
          type: array
          items:
            $ref: '#/components/schemas/QuerySummary'
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - created
      - database
      - database_id
      - id
      - last_modified
      - modified
      - name
      - queries
    ProjectionNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        attributes:
          type: array
          items:
            type: string
      required:
      - attributes
      - children
      - id
      - ra_node_type
      - validation_errors
    Query:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        text:
          type: string
        language:
          $ref: '#/components/schemas/LanguageEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
          readOnly: true
        assistant_messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
      required:
      - assistant_messages
      - created
      - id
      - language
      - modified
      - name
      - validation_errors
    QueryError:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        hint:
          type: string
        position:
          $ref: '#/components/schemas/ErrorPosition'
      required:
      - title
    QueryExecution:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/QueryResultData'
          description: Query result data if the query execution was successful
        success:
          type: boolean
          description: Indicates if the query execution was successful
      required:
      - success
    QueryResultData:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
          description: List of column names from the query
        rows:
          type: array
          items:
            type: array
            items:
              type: string
              nullable: true
            description: Values in a single row
          description: List of query result rows
      required:
      - columns
      - rows
    QuerySummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        language:
          $ref: '#/components/schemas/LanguageEnum'
      required:
      - id
      - language
      - name
    QueryTree:
      type: object
      properties:
        sql_tree:
          allOf:
          - $ref: '#/components/schemas/SQLTree'
          readOnly: true
        ra_tree:
          allOf:
          - $ref: '#/components/schemas/RATree'
          readOnly: true
      required:
      - ra_tree
      - sql_tree
    RAJoinNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        operator:
          type: string
      required:
      - children
      - id
      - operator
      - ra_node_type
      - validation_errors
    RATree:
      oneOf:
      - $ref: '#/components/schemas/RelationNode'
      - $ref: '#/components/schemas/ProjectionNode'
      - $ref: '#/components/schemas/SelectionNode'
      - $ref: '#/components/schemas/RenameNode'
      - $ref: '#/components/schemas/DivisionNode'
      - $ref: '#/components/schemas/SetOperationNode'
      - $ref: '#/components/schemas/RAJoinNode'
      - $ref: '#/components/schemas/ThetaJoinNode'
      - $ref: '#/components/schemas/GroupedAggregationNode'
      - $ref: '#/components/schemas/TopNNode'
    RaNodeTypeEnum:
      enum:
      - Relation
      - Projection
      - Selection
      - Rename
      - Division
      - SetOperation
      - Join
      - ThetaJoin
      - GroupedAggregation
      - TopN
      type: string
      description: |-
        * `Relation` - Relation
        * `Projection` - Projection
        * `Selection` - Selection
        * `Rename` - Rename
        * `Division` - Division
        * `SetOperation` - SetOperation
        * `Join` - Join
        * `ThetaJoin` - ThetaJoin
        * `GroupedAggregation` - GroupedAggregation
        * `TopN` - TopN
    RelationNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        name:
          type: string
      required:
      - children
      - id
      - name
      - ra_node_type
      - validation_errors
    RenameNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        alias:
          type: string
      required:
      - alias
      - children
      - id
      - ra_node_type
      - validation_errors
    SQLJoinNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        method:
          type: string
        condition:
          type: string
          nullable: true
        using:
          type: array
          items:
            type: string
          nullable: true
      required:
      - children
      - id
      - method
      - sql_node_type
      - validation_errors
    SQLTree:
      oneOf:
      - $ref: '#/components/schemas/TableNode'
      - $ref: '#/components/schemas/AliasNode'
      - $ref: '#/components/schemas/SQLJoinNode'
      - $ref: '#/components/schemas/SelectNode'
      - $ref: '#/components/schemas/WhereNode'
      - $ref: '#/components/schemas/GroupByNode'
      - $ref: '#/components/schemas/HavingNode'
      - $ref: '#/components/schemas/OrderByNode'
      - $ref: '#/components/schemas/SetOpNode'
    SelectNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        columns:
          type: array
          items:
            type: string
      required:
      - children
      - columns
      - id
      - sql_node_type
      - validation_errors
    SelectionNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        condition:
          type: string
      required:
      - children
      - condition
      - id
      - ra_node_type
      - validation_errors
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetOpNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        operator:
          type: string
      required:
      - children
      - id
      - operator
      - sql_node_type
      - validation_errors
    SetOperationNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        operator:
          type: string
      required:
      - children
      - id
      - operator
      - ra_node_type
      - validation_errors
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 255
      required:
      - current_password
      - new_email
    SqlNodeTypeEnum:
      enum:
      - Table
      - Alias
      - Join
      - Select
      - Where
      - GroupBy
      - Having
      - OrderBy
      - SetOp
      type: string
      description: |-
        * `Table` - Table
        * `Alias` - Alias
        * `Join` - Join
        * `Select` - Select
        * `Where` - Where
        * `GroupBy` - GroupBy
        * `Having` - Having
        * `OrderBy` - OrderBy
        * `SetOp` - SetOp
    TableNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        name:
          type: string
      required:
      - children
      - id
      - name
      - sql_node_type
      - validation_errors
    ThetaJoinNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        condition:
          type: string
      required:
      - children
      - condition
      - id
      - ra_node_type
      - validation_errors
    TopNNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/RATree'
          readOnly: true
        ra_node_type:
          allOf:
          - $ref: '#/components/schemas/RaNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        limit:
          type: integer
        attribute:
          type: string
      required:
      - attribute
      - children
      - id
      - limit
      - ra_node_type
      - validation_errors
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - email
      - id
      - modified
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - id
      - password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 255
      required:
      - new_email
    WhereNode:
      type: object
      properties:
        id:
          type: integer
        children:
          type: array
          items:
            $ref: '#/components/schemas/SQLTree'
          readOnly: true
        sql_node_type:
          allOf:
          - $ref: '#/components/schemas/SqlNodeTypeEnum'
          readOnly: true
        validation_errors:
          type: array
          items:
            $ref: '#/components/schemas/QueryError'
        condition:
          type: string
      required:
      - children
      - condition
      - id
      - sql_node_type
      - validation_errors
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
