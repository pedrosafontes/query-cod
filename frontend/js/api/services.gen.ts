// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  QueriesListData,
  QueriesListResponse,
  QueriesCreateData,
  QueriesCreateResponse,
  QueriesRetrieveData,
  QueriesRetrieveResponse,
  QueriesUpdateData,
  QueriesUpdateResponse,
  QueriesPartialUpdateData,
  QueriesPartialUpdateResponse,
  QueriesDestroyData,
  QueriesDestroyResponse,
  QueriesExecutionsCreateData,
  QueriesExecutionsCreateResponse,
  UsersListData,
  UsersListResponse,
  UsersCreateData,
  UsersCreateResponse,
  UsersRetrieveData,
  UsersRetrieveResponse,
  UsersUpdateData,
  UsersUpdateResponse,
  UsersPartialUpdateData,
  UsersPartialUpdateResponse,
  UsersDestroyData,
  UsersDestroyResponse,
} from "./types.gen";

export class QueriesService {
  /**
   * @param data The data for the request.
   * @param data.limit Number of results to return per page.
   * @param data.offset The initial index from which to return the results.
   * @returns PaginatedQueryList
   * @throws ApiError
   */
  public static queriesList(
    data: QueriesListData = {},
  ): CancelablePromise<QueriesListResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/queries/",
      query: {
        limit: data.limit,
        offset: data.offset,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @returns Query
   * @throws ApiError
   */
  public static queriesCreate(
    data: QueriesCreateData,
  ): CancelablePromise<QueriesCreateResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/queries/",
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this query.
   * @returns Query
   * @throws ApiError
   */
  public static queriesRetrieve(
    data: QueriesRetrieveData,
  ): CancelablePromise<QueriesRetrieveResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/queries/{id}/",
      path: {
        id: data.id,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this query.
   * @param data.requestBody
   * @returns Query
   * @throws ApiError
   */
  public static queriesUpdate(
    data: QueriesUpdateData,
  ): CancelablePromise<QueriesUpdateResponse> {
    return __request(OpenAPI, {
      method: "PUT",
      url: "/api/queries/{id}/",
      path: {
        id: data.id,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this query.
   * @param data.requestBody
   * @returns QueryPartialUpdate
   * @throws ApiError
   */
  public static queriesPartialUpdate(
    data: QueriesPartialUpdateData,
  ): CancelablePromise<QueriesPartialUpdateResponse> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/queries/{id}/",
      path: {
        id: data.id,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this query.
   * @returns void No response body
   * @throws ApiError
   */
  public static queriesDestroy(
    data: QueriesDestroyData,
  ): CancelablePromise<QueriesDestroyResponse> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/queries/{id}/",
      path: {
        id: data.id,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this query.
   * @returns QueryExecution
   * @throws ApiError
   */
  public static queriesExecutionsCreate(
    data: QueriesExecutionsCreateData,
  ): CancelablePromise<QueriesExecutionsCreateResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/queries/{id}/executions/",
      path: {
        id: data.id,
      },
    });
  }
}

export class UsersService {
  /**
   * @param data The data for the request.
   * @param data.limit Number of results to return per page.
   * @param data.offset The initial index from which to return the results.
   * @returns PaginatedUserList
   * @throws ApiError
   */
  public static usersList(
    data: UsersListData = {},
  ): CancelablePromise<UsersListResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/users/",
      query: {
        limit: data.limit,
        offset: data.offset,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.requestBody
   * @returns User
   * @throws ApiError
   */
  public static usersCreate(
    data: UsersCreateData,
  ): CancelablePromise<UsersCreateResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/api/users/",
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this user.
   * @returns User
   * @throws ApiError
   */
  public static usersRetrieve(
    data: UsersRetrieveData,
  ): CancelablePromise<UsersRetrieveResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/api/users/{id}/",
      path: {
        id: data.id,
      },
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this user.
   * @param data.requestBody
   * @returns User
   * @throws ApiError
   */
  public static usersUpdate(
    data: UsersUpdateData,
  ): CancelablePromise<UsersUpdateResponse> {
    return __request(OpenAPI, {
      method: "PUT",
      url: "/api/users/{id}/",
      path: {
        id: data.id,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this user.
   * @param data.requestBody
   * @returns User
   * @throws ApiError
   */
  public static usersPartialUpdate(
    data: UsersPartialUpdateData,
  ): CancelablePromise<UsersPartialUpdateResponse> {
    return __request(OpenAPI, {
      method: "PATCH",
      url: "/api/users/{id}/",
      path: {
        id: data.id,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }

  /**
   * @param data The data for the request.
   * @param data.id A unique integer value identifying this user.
   * @returns void No response body
   * @throws ApiError
   */
  public static usersDestroy(
    data: UsersDestroyData,
  ): CancelablePromise<UsersDestroyResponse> {
    return __request(OpenAPI, {
      method: "DELETE",
      url: "/api/users/{id}/",
      path: {
        id: data.id,
      },
    });
  }
}
